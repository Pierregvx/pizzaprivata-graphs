// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ParameterDecresed extends ethereum.Event {
  get params(): ParameterDecresed__Params {
    return new ParameterDecresed__Params(this);
  }
}

export class ParameterDecresed__Params {
  _event: ParameterDecresed;

  constructor(event: ParameterDecresed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ParameterIncresed extends ethereum.Event {
  get params(): ParameterIncresed__Params {
    return new ParameterIncresed__Params(this);
  }
}

export class ParameterIncresed__Params {
  _event: ParameterIncresed;

  constructor(event: ParameterIncresed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RequestAssigned extends ethereum.Event {
  get params(): RequestAssigned__Params {
    return new RequestAssigned__Params(this);
  }
}

export class RequestAssigned__Params {
  _event: RequestAssigned;

  constructor(event: RequestAssigned) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RequestCancelled extends ethereum.Event {
  get params(): RequestCancelled__Params {
    return new RequestCancelled__Params(this);
  }
}

export class RequestCancelled__Params {
  _event: RequestCancelled;

  constructor(event: RequestCancelled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RequestCreated extends ethereum.Event {
  get params(): RequestCreated__Params {
    return new RequestCreated__Params(this);
  }
}

export class RequestCreated__Params {
  _event: RequestCreated;

  constructor(event: RequestCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get instructions(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RequestDisputed extends ethereum.Event {
  get params(): RequestDisputed__Params {
    return new RequestDisputed__Params(this);
  }
}

export class RequestDisputed__Params {
  _event: RequestDisputed;

  constructor(event: RequestDisputed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RequestFinalized extends ethereum.Event {
  get params(): RequestFinalized__Params {
    return new RequestFinalized__Params(this);
  }
}

export class RequestFinalized__Params {
  _event: RequestFinalized;

  constructor(event: RequestFinalized) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Contract__requestMapResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getProposer(): Address {
    return this.value0;
  }

  getValue(): BigInt {
    return this.value1;
  }

  getRequestTiming(): BigInt {
    return this.value2;
  }

  getLaudableTiming(): BigInt {
    return this.value3;
  }

  getPrize(): BigInt {
    return this.value4;
  }

  getStartTime(): BigInt {
    return this.value5;
  }

  getStatus(): BigInt {
    return this.value6;
  }
}

export class Contract__trustMeterResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getRequestsCount(): BigInt {
    return this.value0;
  }

  getDisputed(): BigInt {
    return this.value1;
  }

  getWon(): BigInt {
    return this.value2;
  }

  getLost(): BigInt {
    return this.value3;
  }

  getTotalPrizePaid(): BigInt {
    return this.value4;
  }

  getTotalValuePaid(): BigInt {
    return this.value5;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  idProposerMap(param0: BigInt): BigInt {
    let result = super.call(
      "idProposerMap",
      "idProposerMap(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_idProposerMap(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "idProposerMap",
      "idProposerMap(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isDisputer(param0: Address): boolean {
    let result = super.call("isDisputer", "isDisputer(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isDisputer(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isDisputer", "isDisputer(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastRequestId(): BigInt {
    let result = super.call("lastRequestId", "lastRequestId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastRequestId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastRequestId",
      "lastRequestId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingReqMap(param0: Address): BigInt {
    let result = super.call(
      "pendingReqMap",
      "pendingReqMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_pendingReqMap(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingReqMap",
      "pendingReqMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposerIdMap(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "proposerIdMap",
      "proposerIdMap(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_proposerIdMap(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposerIdMap",
      "proposerIdMap(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  requestMap(param0: BigInt): Contract__requestMapResult {
    let result = super.call(
      "requestMap",
      "requestMap(uint256):(address,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__requestMapResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_requestMap(
    param0: BigInt
  ): ethereum.CallResult<Contract__requestMapResult> {
    let result = super.tryCall(
      "requestMap",
      "requestMap(uint256):(address,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__requestMapResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  trustMeter(param0: Address): Contract__trustMeterResult {
    let result = super.call(
      "trustMeter",
      "trustMeter(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__trustMeterResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_trustMeter(
    param0: Address
  ): ethereum.CallResult<Contract__trustMeterResult> {
    let result = super.tryCall(
      "trustMeter",
      "trustMeter(address):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__trustMeterResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }
}

export class AssignRequestCall extends ethereum.Call {
  get inputs(): AssignRequestCall__Inputs {
    return new AssignRequestCall__Inputs(this);
  }

  get outputs(): AssignRequestCall__Outputs {
    return new AssignRequestCall__Outputs(this);
  }
}

export class AssignRequestCall__Inputs {
  _call: AssignRequestCall;

  constructor(call: AssignRequestCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AssignRequestCall__Outputs {
  _call: AssignRequestCall;

  constructor(call: AssignRequestCall) {
    this._call = call;
  }
}

export class CancelRequestCall extends ethereum.Call {
  get inputs(): CancelRequestCall__Inputs {
    return new CancelRequestCall__Inputs(this);
  }

  get outputs(): CancelRequestCall__Outputs {
    return new CancelRequestCall__Outputs(this);
  }
}

export class CancelRequestCall__Inputs {
  _call: CancelRequestCall;

  constructor(call: CancelRequestCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelRequestCall__Outputs {
  _call: CancelRequestCall;

  constructor(call: CancelRequestCall) {
    this._call = call;
  }
}

export class CreateRequestCall extends ethereum.Call {
  get inputs(): CreateRequestCall__Inputs {
    return new CreateRequestCall__Inputs(this);
  }

  get outputs(): CreateRequestCall__Outputs {
    return new CreateRequestCall__Outputs(this);
  }
}

export class CreateRequestCall__Inputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get requestTiming(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get laudableTiming(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get prize(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get instructions(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreateRequestCall__Outputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }
}

export class DecreaseRequestParameterCall extends ethereum.Call {
  get inputs(): DecreaseRequestParameterCall__Inputs {
    return new DecreaseRequestParameterCall__Inputs(this);
  }

  get outputs(): DecreaseRequestParameterCall__Outputs {
    return new DecreaseRequestParameterCall__Outputs(this);
  }
}

export class DecreaseRequestParameterCall__Inputs {
  _call: DecreaseRequestParameterCall;

  constructor(call: DecreaseRequestParameterCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deltaValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get deltaRequestTiming(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deltaLaudableTiming(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deltaPrize(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class DecreaseRequestParameterCall__Outputs {
  _call: DecreaseRequestParameterCall;

  constructor(call: DecreaseRequestParameterCall) {
    this._call = call;
  }
}

export class FinalizeRequestCall extends ethereum.Call {
  get inputs(): FinalizeRequestCall__Inputs {
    return new FinalizeRequestCall__Inputs(this);
  }

  get outputs(): FinalizeRequestCall__Outputs {
    return new FinalizeRequestCall__Outputs(this);
  }
}

export class FinalizeRequestCall__Inputs {
  _call: FinalizeRequestCall;

  constructor(call: FinalizeRequestCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeRequestCall__Outputs {
  _call: FinalizeRequestCall;

  constructor(call: FinalizeRequestCall) {
    this._call = call;
  }
}

export class IncreaseRequestParameterCall extends ethereum.Call {
  get inputs(): IncreaseRequestParameterCall__Inputs {
    return new IncreaseRequestParameterCall__Inputs(this);
  }

  get outputs(): IncreaseRequestParameterCall__Outputs {
    return new IncreaseRequestParameterCall__Outputs(this);
  }
}

export class IncreaseRequestParameterCall__Inputs {
  _call: IncreaseRequestParameterCall;

  constructor(call: IncreaseRequestParameterCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get extraValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get extraRequestTiming(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get extraLaudableTiming(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get extraPrize(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class IncreaseRequestParameterCall__Outputs {
  _call: IncreaseRequestParameterCall;

  constructor(call: IncreaseRequestParameterCall) {
    this._call = call;
  }
}

export class OpenDisputeCall extends ethereum.Call {
  get inputs(): OpenDisputeCall__Inputs {
    return new OpenDisputeCall__Inputs(this);
  }

  get outputs(): OpenDisputeCall__Outputs {
    return new OpenDisputeCall__Outputs(this);
  }
}

export class OpenDisputeCall__Inputs {
  _call: OpenDisputeCall;

  constructor(call: OpenDisputeCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OpenDisputeCall__Outputs {
  _call: OpenDisputeCall;

  constructor(call: OpenDisputeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDisputantCall extends ethereum.Call {
  get inputs(): SetDisputantCall__Inputs {
    return new SetDisputantCall__Inputs(this);
  }

  get outputs(): SetDisputantCall__Outputs {
    return new SetDisputantCall__Outputs(this);
  }
}

export class SetDisputantCall__Inputs {
  _call: SetDisputantCall;

  constructor(call: SetDisputantCall) {
    this._call = call;
  }

  get disputant(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetDisputantCall__Outputs {
  _call: SetDisputantCall;

  constructor(call: SetDisputantCall) {
    this._call = call;
  }
}

export class SetDisputantFeeCall extends ethereum.Call {
  get inputs(): SetDisputantFeeCall__Inputs {
    return new SetDisputantFeeCall__Inputs(this);
  }

  get outputs(): SetDisputantFeeCall__Outputs {
    return new SetDisputantFeeCall__Outputs(this);
  }
}

export class SetDisputantFeeCall__Inputs {
  _call: SetDisputantFeeCall;

  constructor(call: SetDisputantFeeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDisputantFeeCall__Outputs {
  _call: SetDisputantFeeCall;

  constructor(call: SetDisputantFeeCall) {
    this._call = call;
  }
}

export class SolveDisputeCall extends ethereum.Call {
  get inputs(): SolveDisputeCall__Inputs {
    return new SolveDisputeCall__Inputs(this);
  }

  get outputs(): SolveDisputeCall__Outputs {
    return new SolveDisputeCall__Outputs(this);
  }
}

export class SolveDisputeCall__Inputs {
  _call: SolveDisputeCall;

  constructor(call: SolveDisputeCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get result(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SolveDisputeCall__Outputs {
  _call: SolveDisputeCall;

  constructor(call: SolveDisputeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawPrizeCall extends ethereum.Call {
  get inputs(): WithdrawPrizeCall__Inputs {
    return new WithdrawPrizeCall__Inputs(this);
  }

  get outputs(): WithdrawPrizeCall__Outputs {
    return new WithdrawPrizeCall__Outputs(this);
  }
}

export class WithdrawPrizeCall__Inputs {
  _call: WithdrawPrizeCall;

  constructor(call: WithdrawPrizeCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawPrizeCall__Outputs {
  _call: WithdrawPrizeCall;

  constructor(call: WithdrawPrizeCall) {
    this._call = call;
  }
}
